{"version":3,"sources":["components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","screens/HomeScreen.js","screens/ProductScreen.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","className","Link","Footer","Row","Col","Rating","value","text","color","style","defaultProps","Product","product","Card","_id","Img","src","image","Body","Title","as","name","Text","rating","numReviews","price","HomeScreen","useState","products","setProducts","useEffect","a","axios","get","data","fetchProducts","map","sm","md","lg","xl","ProductScreen","match","setProduct","params","fetchProduct","Image","alt","fluid","ListGroup","Item","description","countInStock","Button","type","disabled","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPA8BeA,EA3BA,WACX,OACI,iCACI,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAU,OAAOC,OAAO,KAAKC,kBAAgB,EAA/D,SACI,eAACC,EAAA,EAAD,WACI,cAAC,gBAAD,CAAeC,GAAK,IAApB,SACI,cAACN,EAAA,EAAOO,MAAR,qCAEJ,cAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,qBAC7B,cAACT,EAAA,EAAOU,SAAR,CAAiBC,GAAG,mBAApB,SACI,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACI,cAAC,gBAAD,CAAeP,GAAK,QAApB,SACI,eAACM,EAAA,EAAIE,KAAL,WAAW,mBAAGD,UAAY,yBAA1B,aAEJ,cAAC,gBAAD,CAAeP,GAAK,SAApB,SACI,eAACM,EAAA,EAAIE,KAAL,eAAW,mBAAGD,UAAY,gBAA1B,2B,gBCFjBE,EAdA,WACX,OACI,iCACI,cAACV,EAAA,EAAD,UACI,cAACW,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKJ,UAAY,mBAAjB,wD,yCCHdK,EAAS,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC3B,OACI,gCACI,+BAGI,mBAAGC,MAAS,CAAED,MAAOA,GAAQR,UAAaM,GAAQ,EAAI,cAAgBA,GAAS,GAAM,uBAAyB,kBAElH,+BAGI,mBAAGG,MAAS,CAAED,MAAOA,GAAQR,UAAaM,GAAQ,EAAI,cAAgBA,GAAS,IAAM,uBAAyB,kBAElH,+BAGI,mBAAGG,MAAS,CAAED,MAAOA,GAAQR,UAAaM,GAAQ,EAAI,cAAgBA,GAAS,IAAM,uBAAyB,kBAElH,+BAGI,mBAAGG,MAAS,CAAED,MAAOA,GAAQR,UAAaM,GAAQ,EAAI,cAAgBA,GAAS,IAAM,uBAAyB,kBAElH,+BAGI,mBAAGG,MAAS,CAAED,MAAOA,GAAQR,UAAaM,GAAQ,EAAI,cAAgBA,GAAS,IAAM,uBAAyB,kBAElH,+BAAOC,GAAQA,QAI3BF,EAAOK,aAAe,CAACF,MAAO,WAOfH,Q,QClBAM,EArBC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACf,OACI,eAACC,EAAA,EAAD,CAAMb,UAAY,mBAAlB,UAEI,cAAC,OAAD,CAAMP,GAAE,mBAAgBmB,EAAQE,KAAhC,SACI,cAACD,EAAA,EAAKE,IAAN,CAAUC,IAAOJ,EAAQK,MAAO5B,QAAU,UAG9C,eAACwB,EAAA,EAAKK,KAAN,WACA,cAAC,OAAD,CAAMzB,GAAE,mBAAiBmB,EAAQE,KAAjC,SACI,eAACD,EAAA,EAAKM,MAAN,CAAYC,GAAK,MAAjB,cAAwB,iCAASR,EAAQS,YAE7C,cAACR,EAAA,EAAKS,KAAN,CAAWF,GAAK,MAAhB,SACI,cAAC,EAAD,CAAQd,MAASM,EAAQW,OAAQhB,KAAI,UAAOK,EAAQY,WAAf,gBAEzC,eAACX,EAAA,EAAKS,KAAN,CAAWF,GAAK,KAAhB,eAAwBR,EAAQa,gB,iBCc7BC,EA7BI,WAAM,MAEWC,mBAAS,IAFpB,mBAEdC,EAFc,KAEJC,EAFI,KAcrB,OATAC,qBAAU,YAEa,uCAAG,8BAAAC,EAAA,sEAEKC,IAAMC,IAAI,iBAFf,gBAEVC,EAFU,EAEVA,KACRL,EAAYK,GAHM,2CAAH,qDAKnBC,KACD,IAEC,qCACI,mDACA,cAAChC,EAAA,EAAD,UAEKyB,EAASQ,KAAI,SAAAxB,GAAO,OACjB,cAACR,EAAA,EAAD,CAAyBiC,GAAM,GAAIC,GAAM,EAAGC,GAAM,EAAGC,GAAM,EAA3D,SACI,cAAC,EAAD,CAAS5B,QAAWA,KADZA,EAAQE,c,wBC8DzB2B,EAhFO,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EAGHf,mBAAS,IAHN,mBAG1Bf,EAH0B,KAGjB+B,EAHiB,KAgBjC,OAXAb,qBAAU,YACY,uCAAG,8BAAAC,EAAA,sEACMC,IAAMC,IAAN,wBAA2BS,EAAME,OAAO9C,KAD9C,gBACToC,EADS,EACTA,KACRS,EAAWT,GAFM,2CAAH,qDAIlBW,KACF,CAACH,IAMC,qCACI,cAAC,OAAD,CAAM1C,UAAY,qBAAqBP,GAAK,IAA5C,qBACA,eAACU,EAAA,EAAD,WAEI,cAACC,EAAA,EAAD,CAAKkC,GAAM,EAAX,SACI,cAACQ,EAAA,EAAD,CAAO9B,IAAOJ,EAAQK,MAAO8B,IAAOnC,EAAQS,KAAM2B,OAAK,MAG3D,cAAC5C,EAAA,EAAD,CAAKkC,GAAM,EAAX,SACI,eAACW,EAAA,EAAD,CAAW5D,QAAU,QAArB,UACI,cAAC4D,EAAA,EAAUC,KAAX,UACI,6BAAKtC,EAAQS,SAEjB,cAAC4B,EAAA,EAAUC,KAAX,UACI,cAAC,EAAD,CAAQ5C,MAASM,EAAQW,OAAQhB,KAAI,UAAOK,EAAQY,WAAf,gBAEzC,eAACyB,EAAA,EAAUC,KAAX,qBACYtC,EAAQa,SAEpB,eAACwB,EAAA,EAAUC,KAAX,2BACkBtC,EAAQuC,oBAOlC,cAAC/C,EAAA,EAAD,CAAKkC,GAAM,EAAX,SACI,cAACzB,EAAA,EAAD,UACI,eAACoC,EAAA,EAAD,CAAW5D,QAAU,QAArB,UACI,cAAC4D,EAAA,EAAUC,KAAX,UACI,eAAC/C,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,qBAGA,cAACA,EAAA,EAAD,UACI,wCAAWQ,EAAQa,gBAI/B,cAACwB,EAAA,EAAUC,KAAX,UACI,eAAC/C,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,sBAGA,cAACA,EAAA,EAAD,UACKQ,EAAQwC,aAAe,EAAI,WAAY,sBAIpD,cAACH,EAAA,EAAUC,KAAX,UACI,cAACG,EAAA,EAAD,CAAQrD,UAAY,YAAYsD,KAAM,SAASC,SAAqC,IAAzB3C,EAAQwC,aAAnE,yC,OCrDjBI,EAdH,WACV,OACI,eAAC,gBAAD,WACA,cAAC,EAAD,IACA,sBAAMxD,UAAY,OAAlB,SACE,eAACR,EAAA,EAAD,WACE,cAAC,IAAD,CAAOiE,KAAO,IAAIC,UAAahC,EAAYiC,OAAK,IAChD,cAAC,IAAD,CAAOF,KAAO,eAAeC,UAAajB,SAG9C,cAAC,EAAD,QCLSmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.901653cc.chunk.js","sourcesContent":["import React from 'react';\nimport { Navbar, Nav, Container} from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap'\nconst Header = () => {\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant = \"dark\" expand=\"lg\" collapseOnSelect>\n                <Container> \n                    <LinkContainer to = '/'>\n                        <Navbar.Brand>Abu Ein Technologies</Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"ml-auto\">\n                            <LinkContainer to = '/cart'>\n                                <Nav.Link ><i className = \"fas fa-shopping-cart\"></i> Cart</Nav.Link>\n                            </LinkContainer>\n                            <LinkContainer to = '/login'>\n                                <Nav.Link> <i className = \"fas fa-user\"></i> Login</Nav.Link>\n                            </LinkContainer>\n                        </Nav>\n                    \n                    </Navbar.Collapse>\n                </Container>\n                \n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col} from 'react-bootstrap';\nconst Footer = () => {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    <Col className = \"text-center py-3\">\n                        Copyright &copy; Abu Ein Technologies\n                    </Col>\n                </Row>\n            </Container>    \n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n// we destructured value and text like this \nconst Rating = ({ value, text, color }) => {\n    return (\n        <div>\n            <span>\n                {/* If the ratings value is greater or equal to 1, then show a full star. Else, If it is greater \n                than or equal to 0.5, show a half star. Else, show an empty star */}\n                <i style = {{ color: color}} className = {value >=1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                {/* If the ratings value is greater or equal to 1, then show a full star. Else, If it is greater \n                than or equal to 0.5, show a half star. Else, show an empty star */}\n                <i style = {{ color: color}} className = {value >=2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                {/* If the ratings value is greater or equal to 1, then show a full star. Else, If it is greater \n                than or equal to 0.5, show a half star. Else, show an empty star */}\n                <i style = {{ color: color}} className = {value >=3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                {/* If the ratings value is greater or equal to 1, then show a full star. Else, If it is greater \n                than or equal to 0.5, show a half star. Else, show an empty star */}\n                <i style = {{ color: color}} className = {value >=4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                {/* If the ratings value is greater or equal to 1, then show a full star. Else, If it is greater \n                than or equal to 0.5, show a half star. Else, show an empty star */}\n                <i style = {{ color: color}} className = {value >=5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>{text && text}</span>\n        </div>\n    )\n}\nRating.defaultProps = {color: '#B7950B'}\nRating.propTypes = {\n    // isRequired means that the prop should be inputted\n    value: PropTypes.number.isRequired, \n    text: PropTypes.string.isRequired,\n    color: PropTypes.string\n}\nexport default Rating\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\nimport { Link } from 'react-router-dom'\nconst Product = ({ product }) => {\n    return (\n        <Card className = \"my-3 p-3 rounded\">\n            {/* The image of the card */}\n            <Link to = {`/product/${product._id}`}>\n                <Card.Img src = {product.image} variant = 'top'/>\n            </Link>\n            {/* The body of the card */}\n            <Card.Body>\n            <Link to  = {`/product/${product._id}`}>\n                <Card.Title as = 'div'> <strong>{product.name}</strong></Card.Title>\n            </Link>\n            <Card.Text as = 'div'>\n                <Rating value = {product.rating} text = {`${product.numReviews} reviews`} />\n            </Card.Text>\n            <Card.Text as = \"h3\"> ${product.price}</Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product\n","import React , { useState, useEffect } from 'react'\nimport Product from '../components/Product'\nimport { Row, Col } from 'react-bootstrap'\nimport axios from 'axios'\nconst HomeScreen = () => {\n    //intializing state using useState hook \n    const [products, setProducts] = useState([])\n\n    // useEffect will fire as soon as HomeScreen loads\n    useEffect(()=>{\n        //create a separate function to enable aysnc, wait, because axios.get returns a promise\n        const fetchProducts = async() =>{\n            // destructuring data from the res object that you recieve from the server\n            const { data } = await axios.get('/api/products')\n            setProducts(data)\n        }\n        fetchProducts()\n    }, [])\n    return (\n        <>\n            <h1> Latest Products </h1>\n            <Row>\n                {/* For each product, we will create a column with a product component */}\n                {products.map(product => ( \n                    <Col key = {product._id} sm = {12} md = {6} lg = {4} xl = {3} >\n                        <Product product = {product}/>\n                    </Col>\n                ))}\n            </Row>\n        </>\n    )\n}\n\nexport default HomeScreen\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Col, Row, Image, ListGroup, Card, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Rating from '../components/Rating'\n\nconst ProductScreen = ({ match }) => {\n    \n    // the intial state of a product is an empty object\n    const [product, setProduct] = useState({})\n\n    useEffect(()=>{\n        const fetchProduct = async() =>{\n            const { data } = await axios.get(`/api/products/${match.params.id}`)\n            setProduct(data)\n        }\n        fetchProduct()\n    },[match]) \n\n    /*  For each product, we will create a row. \n        The row has three columns: Image, ListGroup, and a Card\n    */\n    return (\n        <>\n            <Link className = 'btn btn-light my-3' to = '/'>Go Back</Link>\n            <Row>\n                {/* md = {6}, when we are using a middle screen, take half of the row */}\n                <Col md = {6}>\n                    <Image src = {product.image} alt = {product.name} fluid/>\n                </Col>\n                {/* md = {3}, when we are using a middle screen, take 25% of the row */}\n                <Col md = {3}>\n                    <ListGroup variant = 'flush'>\n                        <ListGroup.Item>\n                            <h3>{product.name}</h3>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Rating value = {product.rating} text = {`${product.numReviews} reviews`} />\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            Price: {product.price}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            Description: {product.description}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                {/* We create our last column, which will be the add to cart stuff\n                    Create a card and wrap in it a list group\n                    In each list group item, create another row and two columns in it*/}\n                <Col md = {3}>\n                    <Card>\n                        <ListGroup variant = 'flush'>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        Price:\n                                    </Col>\n                                    <Col>\n                                        <strong> ${product.price}</strong>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>\n                                        Status:\n                                    </Col>\n                                    <Col>\n                                        {product.countInStock > 0 ? 'In Stock': 'Out of Stock'}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Button className = 'btn-block' type ='button' disabled = {product.countInStock === 0}>\n                                    Add to Cart\n                                </Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default ProductScreen\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nconst App = () => {\n  return (\n      <Router>\n      <Header/>\n      <main className = \"py-3\">\n        <Container>\n          <Route path = '/' component = {HomeScreen} exact/>\n          <Route path = '/product/:id' component = {ProductScreen} />\n        </Container>\n      </main>\n      <Footer/>\n      </Router>\n      );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}